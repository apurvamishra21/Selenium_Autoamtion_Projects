/*Q. I have a list of 600 Urls (sub urls of one application) , I need to check for any broken links present or not for each of them.
 * Now , I need to run this in parallel mode as executing them one by one using any loop will take a lot of time as one single URL might take 1 min execution time.
 * so how can this be achieved in a quick manner?
 * 
 * 
 * 
 */



package section4.practiceQ;

import java.net.HttpURLConnection;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

import io.github.bonigarcia.wdm.WebDriverManager;

public class BrokenLinksUsingJavaStreams {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		WebDriverManager.chromedriver().setup();
		WebDriver driver = new ChromeDriver();
		driver.manage().window().maximize();
		driver.get("https://amazon.com");
		
		List<WebElement> links = driver.findElements(By.tagName("a"));
		System.out.println("No of links are" + links.size());
		
		List<String> urlList = new ArrayList<String>(); 
		
		for(WebElement e : links) {
			
			String url = e.getAttribute("href") ;
			urlList.add(url);
			checkBrokenLink(url);
			
		}
		
		
	
	
	public static void checkBrokenLink(String linkUrl) {
		
		try {
			URL url = new URL(linkUrl);
			
			HttpURLConnection httpUrlConnection = (HttpURLConnection)url.openConnection();
			httpUrlConnection.setConnectTimeout(5000);
			httpUrlConnection.connect();
			
			if(httpUrlConnection.getResponseCode() >= 400) {
				System.out.println(linkUrl + "------->" + httpUrlConnection.getResponseMessage() + "is a brokenlinks");
			}else {
				System.out.println(linkUrl + "------->" + httpUrlConnection.getResponseMessage());
			}
		}	
	}
	}


