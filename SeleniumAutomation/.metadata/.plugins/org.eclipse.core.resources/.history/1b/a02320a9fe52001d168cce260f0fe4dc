package paramterization;

import java.util.Hashtable;

import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

public class TestNGParameterizationExcel {
	
	public static ExcelReader excel = null;
	
	/*@Test(dataProvider = "getData")
	public void testData(String username , String password , String is_correct) {
		
		System.out.println(username + "-----------" + password + "------------" + is_correct);
		
	}
	
	
	
	@DataProvider
	public static Object[][] getData(){
		
		if(excel == null) {
			excel = new ExcelReader("D:\\Technical\\software docs\\MyFolderByJava\\TestData23_10_2022.xlsx");
		}
		
		
		
		String sheetName="loginTest";
		int rows = excel.getRowCount(sheetName);
		int cols = excel.getColumnCount(sheetName);
		
		Object[][] data = new Object[rows-1][cols];
		
		for(int rowNum = 2 ; rowNum<=rows ; rowNum++) {
			
			for(int colNum = 0; colNum<cols ; colNum++) {
				
				data[rowNum-2][colNum] = excel.getCellData(sheetName, colNum, rowNum);
				
			}
		}
		return data;
	}*/
	//implementing hashcode because it doesnot look good to pass 10 arguments in method declaration
	@Test(dataProvider = "getData")
	public void testData(Hashtable<String , String> data) {
		
	System.out.println(data.get("username"));
		
	}
	
	
	
	@DataProvider
	public static Object[][] getData(){
		
		if(excel == null) {
			excel = new ExcelReader("D:\\Technical\\software docs\\MyFolderByJava\\TestData23_10_2022.xlsx");
		}
		
		
		
		String sheetName="loginTest";
		int rows = excel.getRowCount(sheetName);
		int cols = excel.getColumnCount(sheetName);
		
		Object[][] data = new Object[rows-1][cols];
		
		Hashtable<String , String> table = null;
		
		for(int rowNum = 2 ; rowNum<=rows ; rowNum++) {
			
			for(int colNum = 0; colNum<cols ; colNum++) {
				
			//	data[rowNum-2][colNum] = excel.getCellData(sheetName, colNum, rowNum);
				
				table.put(excel.getCellData(sheetName, colNum, 1) , excel.getCellData(sheetName, colNum, rowNum))
				data[rownum - 2]table.put(excel.getCellData(sheetName, colNum, 1), excel.getCellData(sheetName, colNum, rowNum));	
				data[rowNum-2][0]=table;
				
			}
		}
		return data;
	
	}

	}


